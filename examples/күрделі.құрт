функция бүтін факториал(сан бүтін) {
    егер(сан <= 1) {
        айнымалы нәтиже бүтін = 1;
        қайтар нәтиже;
    }
    
    айнымалы нәтиже бүтін = 1;
    
    қайтала(айнымалы санағыш бүтін = 2; санағыш <= сан; санағыш = санағыш + 1) {
        нәтиже = нәтиже * санағыш;
        
        егер(нәтиже > 10000) {
            жаз("Тым үлкен нәтиже!");
            тоқта;
        }
    }
    
    қайтар нәтиже;
}

функция ештеңе сандарТалдау(бастау бүтін, соңы бүтін) {
    айнымалы жұпСанағыш бүтін = 0;
    айнымалы тақСанағыш бүтін = 0;
    
    қайтала(айнымалы i бүтін = бастау; i <= соңы; i = i + 1) {
        егер(i < 0) {
            өткіз;
        }
        
        айнымалы қалдық бүтін = i % 2;
        егер(қалдық == 0) {
            жұпСанағыш = жұпСанағыш + 1;
        } әйтпесе {
            тақСанағыш = тақСанағыш + 1;
        }
        
        егер(i == 15) {
            жаз("15-ке жеттік!");
        }
        
        егер(жұпСанағыш >= 8) {
            жаз("Жеткілікті жұп сан табылды");
            тоқта;
        }
    }
    
    жаз("Жұп сандар: ");
    жаз(жұпСанағыш);
    жаз("Тақ сандар: ");
    жаз(тақСанағыш);
}

функция шын жайСанБа(сан бүтін) {
    егер(сан <= 1) {
        қайтар жоқ;
    }
    
    егер(сан == 2) {
        қайтар иә;
    }
    
    қайтала(айнымалы i бүтін = 2; i < сан; i = i + 1) {
        егер(сан % i == 0) {
            қайтар жоқ;
        }
        
        егер(i > 10) {
            тоқта;
        }
    }
    
    қайтар иә;
}

функция ештеңе негізгі() {
    жаз("=== ФАКТОРИАЛ ЕСЕПТЕУ ===");
    айнымалы сан6 бүтін = 6;
    айнымалы факториалМәні бүтін = факториал(сан6);
    жаз("6! = ");
    жаз(факториалМәні);
    
    жаз("=== САНДАР ТАЛДАУЫ ===");
    айнымалы сан1 бүтін = 1;
    айнымалы сан20 бүтін = 20;
    сандарТалдау(сан1, сан20);
    
    жаз("=== ЖАЙЛЫҚТЫ ТЕКСЕРУ ===");
    айнымалы тестСаны бүтін = 17;
    айнымалы нәтиже шын = жайСанБа(тестСаны);
    жаз("17 жай сан ба: ");
    егер(нәтиже == иә) {
        жаз("Иә");
    } әйтпесе {
        жаз("Жоқ");
    }
}
