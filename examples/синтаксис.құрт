құрылым студент {
    аты жол,
    жасы бүтін,
    бағалар [5]бөлшек,
    орташаБаға бөлшек,
}

құрылым сынып {
    атауы жол,
    студенттерСаны бүтін,
    студенттер [20]студент,
    сыныпОрташасы бөлшек,
}

функция бөлшек орташаБағаЕсептеу(бағалар [5]бөлшек) {
    айнымалы қосынды бөлшек = 0.0;
    айнымалы саны бүтін = 0;
    
    қайтала(айнымалы i бүтін = 0; i < 5; i = i + 1) {
        егер(бағалар[i] <= 0.0) {
            өткіз;
        }
        қосынды = қосынды + бағалар[i];
        саны = саны + 1;
    }
    
    егер(саны > 0) {
        қайтар қосынды / саны;
    } әйтпесе {
        қайтар 0.0;
    }
}

функция студент студентЖасау(аты жол, жасы бүтін, бағалар [5]бөлшек) {
    айнымалы жаңаСтудент студент;
    жаңаСтудент.аты = аты;
    жаңаСтудент.жасы = жасы;
    
    қайтала(айнымалы i бүтін = 0; i < 5; i = i + 1) {
        жаңаСтудент.бағалар[i] = бағалар[i];
    }
    
    жаңаСтудент.орташаБаға = орташаБағаЕсептеу(бағалар);
    қайтар жаңаСтудент;
}

функция бөлшек сыныпОрташасыЕсептеу(сыныпПен сынып) {
    айнымалы қосынды бөлшек = 0.0;
    айнымалы белсендіСтуденттер бүтін = 0;
    
    қайтала(айнымалы i бүтін = 0; i < сыныпПен.студенттерСаны; i = i + 1) {
        егер(сыныпПен.студенттер[i].орташаБаға <= 0.0) {
            өткіз;
        }
        қосынды = қосынды + сыныпПен.студенттер[i].орташаБаға;
        белсендіСтуденттер = белсендіСтуденттер + 1;
    }
    
    егер(белсендіСтуденттер > 0) {
        қайтар қосынды / белсендіСтуденттер;
    } әйтпесе {
        қайтар 0.0;
    }
}

функция бүтін үздікСтудентТабу(сыныпПен сынып) {
    айнымалы үздікИндекс бүтін = 0;
    айнымалы үздікБаға бөлшек = 0.0;
    
    қайтала(айнымалы i бүтін = 0; i < сыныпПен.студенттерСаны; i = i + 1) {
        егер(сыныпПен.студенттер[i].орташаБаға > үздікБаға) {
            үздікБаға = сыныпПен.студенттер[i].орташаБаға;
            үздікИндекс = i;
            егер(үздікБаға >= 95.0) {
                тоқта;
            }
        }
    }
    
    қайтар үздікИндекс;
}

функция бүтін нашарСтудентСанау(сыныпПен сынып) {
    айнымалы санауыш бүтін = 0;
    
    қайтала(айнымалы i бүтін = 0; i < сыныпПен.студенттерСаны; i = i + 1) {
        егер(сыныпПен.студенттер[i].орташаБаға < 60.0) {
            санауыш = санауыш + 1;
        }
    }
    
    қайтар санауыш;
}

функция бөлшек стипендияЕсептеу(орташаБаға бөлшек) {
    егер(орташаБаға >= 90.0) {
        қайтар 50000.0;
    } әйтпесе егер(орташаБаға >= 80.0) {
        қайтар 30000.0;
    } әйтпесе егер(орташаБаға >= 70.0) {
        қайтар 15000.0;
    } әйтпесе {
        қайтар 0.0;
    }
}

функция ештеңе статистикаШығару(сыныпПен сынып) {
    жаз("=== СЫНЫП СТАТИСТИКАСЫ ===");
    жаз("Сынып атауы: ");
    жаз(сыныпПен.атауы);
    жаз("Студенттер саны: ");
    жаз(сыныпПен.студенттерСаны);
    жаз("Сынып орташасы: ");
    жаз(сыныпПен.сыныпОрташасы);
    жаз("");
}

функция ештеңе студентАқпаратШығару(студент студент) {
    жаз("Студент аты: ");
    жаз(студент.аты);
    жаз("Жасы: ");
    жаз(студент.жасы);
    жаз("Орташа бағасы: ");
    жаз(студент.орташаБаға);
    
    айнымалы стипендия бөлшек = стипендияЕсептеу(студент.орташаБаға);
    жаз("Стипендия мөлшері: ");
    жаз(стипендия);
    жаз("---");
}

функция ештеңе негізгі() {
    айнымалы менінСыныбым сынып;
    менінСыныбым.атауы = "10А сыныбы";
    менінСыныбым.студенттерСаны = 4;
    
    айнымалы айжанБағалары [5]бөлшек = {95.0, 88.0, 92.0, 89.0, 91.0};
    айнымалы арманБағалары [5]бөлшек = {76.0, 82.5, 79.0, 84.0, 81.5};
    айнымалы дидарБағалары [5]бөлшек = {45.0, 58.0, 52.0, 48.0, 55.0};
    айнымалы гүлнарБағалары [5]бөлшек = {85.0, 87.0, 89.0, 86.0, 88.0};
    
    менінСыныбым.студенттер[0] = студентЖасау("Айжан", 17, айжанБағалары);
    менінСыныбым.студенттер[1] = студентЖасау("Арман", 16, арманБағалары);
    менінСыныбым.студенттер[2] = студентЖасау("Дидар", 17, дидарБағалары);
    менінСыныбым.студенттер[3] = студентЖасау("Гүлнар", 16, гүлнарБағалары);
    
    менінСыныбым.сыныпОрташасы = сыныпОрташасыЕсептеу(менінСыныбым);
    
    статистикаШығару(менінСыныбым);
    
    айнымалы барлықСтипендия бөлшек = 0.0;
    қайтала(айнымалы i бүтін = 0; i < менінСыныбым.студенттерСаны; i = i + 1) {
        егер(менінСыныбым.студенттер[i].орташаБаға >= 95.0) {
            жаз("ӨТЕ ЖАҚСЫ СТУДЕНТ:");
        } әйтпесе егер(менінСыныбым.студенттер[i].орташаБаға < 50.0) {
            жаз("НАЗАР АУДАР:");
        } әйтпесе {
            өткіз;
        }
        
        студентАқпаратШығару(менінСыныбым.студенттер[i]);
        айнымалы стипендия бөлшек = стипендияЕсептеу(менінСыныбым.студенттер[i].орташаБаға);
        барлықСтипендия = барлықСтипендия + стипендия;
    }
    
    айнымалы үздікИндекс бүтін = үздікСтудентТабу(менінСыныбым);
    айнымалы нашарСаны бүтін = нашарСтудентСанау(менінСыныбым);
    
    жаз("=== ҚОРЫТЫНДЫ ===");
    жаз("Үздік студент: ");
    жаз(менінСыныбым.студенттер[үздікИндекс].аты);
    жаз("Нашар оқитын студенттер саны: ");
    жаз(нашарСаны);
    жаз("Барлық стипендия қосындысы: ");
    жаз(барлықСтипендия);
}
